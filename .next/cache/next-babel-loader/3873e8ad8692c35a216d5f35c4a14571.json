{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\nconst initialLanguage = {\n  lang: 'th'\n};\nexport const actionTypes = {\n  SET_LANGUAGE: 'SET_LANGUAGE'\n}; // REDUCERS\n\nexport const reducer = (state = initialLanguage, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LANGUAGE:\n      return _Object$assign({}, state, {\n        lang: action.lang\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport const setLanguage = lang => dispatch => {\n  return dispatch({\n    type: actionTypes.SET_LANGUAGE,\n    lang\n  });\n};\nexport const initStore = (initialState = initialLanguage) => createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware, logger)));","map":{"version":3,"sources":["/Users/giraffeman/Workspace/Web Development/next-react-app/src/libs/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","logger","initialLanguage","lang","actionTypes","SET_LANGUAGE","reducer","state","action","type","setLanguage","dispatch","initStore","initialState"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,IAAI,EAAE;AADgB,CAAxB;AAIA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,YAAY,EAAE;AADW,CAApB,C,CAIP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,eAAT,EAA0BM,MAA1B,KAAqC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAW,CAACC,YAAjB;AACE,aAAO,eAAc,EAAd,EAAkBE,KAAlB,EAAyB;AAAEJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAAf,OAAzB,CAAP;;AACF;AAAS,aAAOI,KAAP;AAHX;AAKD,CANM,C,CAQP;;AACA,OAAO,MAAMG,WAAW,GAAGP,IAAI,IAAIQ,QAAQ,IAAI;AAC7C,SAAOA,QAAQ,CAAC;AACdF,IAAAA,IAAI,EAAEL,WAAW,CAACC,YADJ;AAEdF,IAAAA;AAFc,GAAD,CAAf;AAID,CALM;AAOP,OAAO,MAAMS,SAAS,GAAG,CAACC,YAAY,GAAGX,eAAhB,KACzBL,WAAW,CACPS,OADO,EAEPO,YAFO,EAGPd,mBAAmB,CACjBD,eAAe,CACfE,eADe,EAEfC,MAFe,CADE,CAHZ,CADJ","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunkMiddleware from 'redux-thunk'\nimport logger from 'redux-logger'\n\nconst initialLanguage = {\n  lang: 'th'\n}\n\nexport const actionTypes = {\n  SET_LANGUAGE: 'SET_LANGUAGE',\n}\n\n// REDUCERS\nexport const reducer = (state = initialLanguage, action) => {\n  switch (action.type) {\n    case actionTypes.SET_LANGUAGE:\n      return Object.assign({}, state, { lang: action.lang })\n    default: return state\n  }\n}\n\n// ACTIONS\nexport const setLanguage = lang => dispatch => {\n  return dispatch({ \n    type: actionTypes.SET_LANGUAGE,\n    lang\n  })\n}\n\nexport const initStore = (initialState = initialLanguage) => \ncreateStore(\n    reducer, \n    initialState, \n    composeWithDevTools(\n      applyMiddleware(\n      thunkMiddleware,\n      logger\n    )))"]},"metadata":{},"sourceType":"module"}